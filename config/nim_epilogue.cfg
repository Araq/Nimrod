@if danger or quick:
  obj_checks:off
  field_checks:off
  range_checks:off
  bound_checks:off
  overflow_checks:off
  assertions:off
  stacktrace:off
  linetrace:off
  debugger:off
  line_dir:off
  dead_code_elim:on
  @if nimHasNilChecks:
    nilchecks:off
  @end
@end

@if release or danger:
  stacktrace:off
  excessiveStackTrace:off
  linetrace:off
  debugger:off
  line_dir:off
  opt:speed
  define:release
@end

@if windows:
  clang_cl.cpp.options.always %= "${clang_cl.options.always} /EHsc"
  @if not release and not safety and not danger:
    clang_cl.options.linker = "/Z7"
    clang_cl.cpp.options.linker = "/Z7"
  @end
  clang.options.debug = "-g -gcodeview"
  clang.cpp.options.debug = "-g -gcodeview"
  @if not release and not safety and not danger:
    clang.options.linker = "-g"
    clang.cpp.options.linker = "-g"
  @end
@end

@if false: # not danger: # this does not work yet.
  clang.options.always %= "${clang.options.always} -fsanitize=null -fsanitize-undefined-trap-on-error"
  gcc.options.always %= "${gcc.options.always} -fsanitize=null -fsanitize-undefined-trap-on-error"
@end

@if nimLto or nimLto_incremental or lto or lto_incremental:
  @if nimLto_incremental or lto_incremental:
   vcc.options.always%= "${vcc.options.always} /GL /Gw /Gy"
   vcc.cpp.options.always%= "${vcc.cpp.options.always} /GL /Gw /Gy"
   vcc.options.linker %= "${vcc.options.linker} /link /LTCG:incremental"
   vcc.cpp.options.linker %= "${vcc.cpp.options.linker} /link /LTCG:incremental"
  @else:
   vcc.options.always%= "${vcc.options.always} /GL"
   vcc.cpp.options.always%= "${vcc.cpp.options.always} /GL"
   vcc.options.linker %= "${vcc.options.linker} /link /LTCG"
   vcc.cpp.options.linker %= "${vcc.cpp.options.linker} /link /LTCG"
  @end
  clang_cl.options.always%= "${clang_cl.options.always} -flto"
  clang_cl.cpp.options.always%= "${clang.cpp.options.always} -flto"
  clang.options.always%= "${clang.options.always} -flto"
  clang.cpp.options.always%= "${clang.cpp.options.always} -flto"
  icl.options.always %= "${icl.options.always} /Qipo"
  icl.cpp.options.always %= "${icl.cpp.options.always} /Qipo"
  gcc.options.always %= "${gcc.options.always} -flto"
  gcc.cpp.options.always %= "${gcc.cpp.options.always} -flto"
  clang.options.linker %= "${clang.options.linker} -fuse-ld=lld -flto"
  clang.cpp.options.linker %= "${clang.cpp.options.linker} -fuse-ld=lld -flto"
  gcc.options.linker %= "${gcc.options.linker} -flto"
  gcc.cpp.options.linker %= "${gcc.cpp.options.linker} -flto"
@end

@if nimStrip or strip:
  gcc.options.linker %= "${gcc.options.linker} -s"
  gcc.cpp.options.linker %= "${gcc.cpp.options.linker} -s"
  clang.options.linker %= "${clang.options.linker} -s"
  clang.cpp.options.linker %= "${clang.cpp.options.linker} -s"
@end

